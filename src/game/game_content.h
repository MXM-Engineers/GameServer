#pragma once
#include <common/protocol.h>
#include <EASTL/fixed_list.h>
#include <EASTL/fixed_hash_map.h>
#include <EASTL/fixed_map.h>
#include <EASTL/fixed_string.h>

constexpr char* g_ActionStateString[] = {
	"ACTION_STATE_TYPE_IDLE",
	"NORMAL_STAND_MOVESTATE",
	"BATTLE_STAND_MOVESTATE",
	"NORMAL_RUN_MOVESTATE",
	"BATTLE_RUN_MOVESTATE",
	"NORMAL_RUN_FRONT_MOVESTATE",
	"BATTLE_RUN_FRONT_MOVESTATE",
	"NORMAL_RUN_LEFT_MOVESTATE",
	"BATTLE_RUN_LEFT_MOVESTATE",
	"NORMAL_RUN_RIGHT_MOVESTATE",
	"BATTLE_RUN_RIGHT_MOVESTATE",
	"NORMAL_RUN_BACK_MOVESTATE",
	"BATTLE_RUN_BACK_MOVESTATE",
	"NORMAL_ROTATE_LEFT",
	"BATTLE_ROTATE_LEFT",
	"NORMAL_ROTATE_RIGHT",
	"BATTLE_ROTATE_RIGHT",
	"MAXTYPE_MOVESTATE",
	"NONE_BEHAVIORSTATE",
	"ATTACK_BEHAVIORSTATE",
	"ATTACK1_BEHAVIORSTATE",
	"ATTACK2_BEHAVIORSTATE",
	"ATTACK3_BEHAVIORSTATE",
	"ATTACK4_BEHAVIORSTATE",
	"ATTACK5_BEHAVIORSTATE",
	"ATTACK6_BEHAVIORSTATE",
	"ATTACK7_BEHAVIORSTATE",
	"ATTACK8_BEHAVIORSTATE",
	"ATTACK9_BEHAVIORSTATE",
	"ATTACK10_BEHAVIORSTATE",
	"HIT_BEHAVIORSTATE",
	"SKILL_1_BEHAVIORSTATE",
	"SKILL_2_BEHAVIORSTATE",
	"SKILL_3_BEHAVIORSTATE",
	"SKILL_4_BEHAVIORSTATE",
	"SKILL_5_BEHAVIORSTATE",
	"SKILL_6_BEHAVIORSTATE",
	"SKILL_7_BEHAVIORSTATE",
	"SKILL_8_BEHAVIORSTATE",
	"SKILL_9_BEHAVIORSTATE",
	"SKILL_10_BEHAVIORSTATE",
	"SKILL_11_BEHAVIORSTATE",
	"SKILL_12_BEHAVIORSTATE",
	"SKILL_13_BEHAVIORSTATE",
	"SKILL_14_BEHAVIORSTATE",
	"SKILL_15_BEHAVIORSTATE",
	"SKILL_16_BEHAVIORSTATE",
	"SKILL_17_BEHAVIORSTATE",
	"SKILL_18_BEHAVIORSTATE",
	"SKILL_19_BEHAVIORSTATE",
	"SKILL_20_BEHAVIORSTATE",
	"SKILL_21_BEHAVIORSTATE",
	"SKILL_22_BEHAVIORSTATE",
	"SKILL_23_BEHAVIORSTATE",
	"SKILL_24_BEHAVIORSTATE",
	"SKILL_25_BEHAVIORSTATE",
	"SKILL_26_BEHAVIORSTATE",
	"SKILL_27_BEHAVIORSTATE",
	"SKILL_28_BEHAVIORSTATE",
	"SKILL_29_BEHAVIORSTATE",
	"SKILL_30_BEHAVIORSTATE",
	"SKILL_MAX_BEHAVIORSTATE",
	"SKILL_STAGE1_BEHAVIORSTATE",
	"SKILL_STAGE2_BEHAVIORSTATE",
	"SKILL_STAGE3_BEHAVIORSTATE",
	"SKILL_STAGE4_BEHAVIORSTATE",
	"SKILL_STAGE5_BEHAVIORSTATE",
	"SKILL_STAGE6_BEHAVIORSTATE",
	"SKILL_STAGE7_BEHAVIORSTATE",
	"SKILL_STAGE8_BEHAVIORSTATE",
	"SKILL_STAGE9_BEHAVIORSTATE",
	"SKILL_STAGE10_BEHAVIORSTATE",
	"SKILL_STAGE11_BEHAVIORSTATE",
	"SKILL_STAGE12_BEHAVIORSTATE",
	"SKILL_STAGE13_BEHAVIORSTATE",
	"SKILL_STAGE14_BEHAVIORSTATE",
	"SKILL_STAGE15_BEHAVIORSTATE",
	"SKILL_STAGE16_BEHAVIORSTATE",
	"SKILL_STAGE17_BEHAVIORSTATE",
	"SKILL_STAGE18_BEHAVIORSTATE",
	"SKILL_STAGE19_BEHAVIORSTATE",
	"SKILL_STAGE20_BEHAVIORSTATE",
	"SKILL_STAGE_MAX_BEHAVIORSTATE",
	"ATTACKCHARGE_BEHAVIORSTATE",
	"DEFEAT_FLY_BEHAVIORSTATE",
	"DEFEAT_AIRBORNE_BEHAVIORSTATE",
	"DEFEAT_PUSH_BEHAVIORSTATE",
	"DEFEAT_KNOCKDOWN_BEHAVIORSTATE",
	"DEFEAT_SYNC_BEHAVIORSTATE",
	"DEFEAT_GROGGY_BEHAVIORSTATE",
	"LIE_BEHAVIORSTATE",
	"INTERACTION_CAST_BEHAVIORSTATE",
	"INTERACTION_EXECUTE_BEHAVIORSTAT",
	"TAG_IN_EXECUTE_BEHAVIORSTATE",
	"TAG_OUT_EXECUTE_BEHAVIORSTATE",
	"STANCE_IN_BEHAVIORSTATE",
	"STANCE_OUT_BEHAVIORSTATE",
	"RELOAD_BEHAVIORSTATE",
	"WEAPONCHANGE_BEHAVIORSTATE",
	"SPAWN_BEHAVIORSTATE",
	"RESPAWN_BEHAVIORSTATE",
	"DIE_BEHAVIORSTATE",
	"UNDEAD_BEHAVIORSTATE",
	"SHIRK_BEHAVIORSTATE",
	"SHIRK_COMBO_1_BEHAVIORSTATE",
	"SHIRK_MOVE_BEHAVIORSTATE",
	"TALK_BEHAVIORSTATE",
	"BATTLE_STAND_EMOTION_BEHAVIORSTA",
	"CRAWLUP_START_BEHAVIORSTATE",
	"CRAWLUP_MOVE_BEHAVIORSTATE",
	"CRAWLUP_END_BEHAVIORSTATE",
	"CRAWLDOWN_START_BEHAVIORSTATE",
	"CRAWLDOWN_MOVE_BEHAVIORSTATE",
	"CRAWLDOWN_END_BEHAVIORSTATE",
	"JUMP_UP_BEHAVIORSTATE",
	"JUMP_DOWN_BEHAVIORSTATE",
	"EXTRAMOTION_1_BEHAVIORSTATE",
	"EXTRAMOTION_2_BEHAVIORSTATE",
	"EXTRAMOTION_3_BEHAVIORSTATE",
	"EXTRAMOTION_4_BEHAVIORSTATE",
	"EXTRAMOTION_5_BEHAVIORSTATE",
	"EXTRAMOTION_6_BEHAVIORSTATE",
	"EXTRAMOTION_7_BEHAVIORSTATE",
	"EXTRAMOTION_8_BEHAVIORSTATE",
	"EXTRAMOTION_9_BEHAVIORSTATE",
	"EXTRAMOTION_10_BEHAVIORSTATE",
	"SEQUENCE_1_BEHAVIORSTATE",
	"SEQUENCE_2_BEHAVIORSTATE",
	"SEQUENCE_3_BEHAVIORSTATE",
	"SEQUENCE_4_BEHAVIORSTATE",
	"SEQUENCE_5_BEHAVIORSTATE",
	"COMBO_1_BEHAVIORSTATE",
	"COMBO_2_BEHAVIORSTATE",
	"COMBO_3_BEHAVIORSTATE",
	"COMBO_4_BEHAVIORSTATE",
	"COMBO_5_BEHAVIORSTATE",
	"COMBO_6_BEHAVIORSTATE",
	"COMBO_7_BEHAVIORSTATE",
	"COMBO_8_BEHAVIORSTATE",
	"COMBO_9_BEHAVIORSTATE",
	"COMBO_10_BEHAVIORSTATE",
	"MELEE_1_BEHAVIORSTATE",
	"STYLISH_1_BEHAVIORSTATE",
	"CAUGHT_BEHAVIORSTATE",
	"DISABLED_BEHAVIORSTATE",
	"LIFTED_BEHAVIORSTATE",
	"PULLED_BEHAVIORSTATE",
	"DRAGGED_BEHAVIORSTATE",
	"EVENT_BEHAVIORSTATE",
	"EMOTION_BEHAVIORSTATE",
	"JUMP_LOOP_MOVESTATE",
	"BATTLE_JUMP_LOOP_MOVESTATE",
	"JUMP_START_MOVESTATE",
	"BATTLE_JUMP_START_MOVESTATE",
	"JUMP_END_MOVESTATE",
	"BATTLE_JUMP_END_MOVESTATE",
	"BREAKFALL_BEHAVIORSTATE",
	"MAXTYPE_BEHAVIORSTATE",
	"DYNAMIC_OPEN",
	"DYNAMIC_CLOSE",
	"DYNAMIC_SPAWN",
	"DYNAMIC_NORMAL_STAND",
	"DYNAMIC_BATTLE_STAND",
	"DYNAMIC_RUN_FRONT",
	"DYNAMIC_ROTATE_LEFT",
	"DYNAMIC_ROTATE_RIGHT",
	"DYNAMIC_ATTACK",
	"DYNAMIC_HIT",
	"DYNAMIC_DIE",
	"DYNAMIC_ACTIVE",
	"DYNAMIC_EXTRAMOTION_1",
	"DYNAMIC_EXTRAMOTION_2",
	"DYNAMIC_EXTRAMOTION_3",
	"ACTION_STATE_TYPE_MAX",
	"UNKNOWN_ACTION_STATE_TYPE",
};

constexpr char* g_ActionStateInvalidString = "ACTION_STATE_TYPE_INVALID";

struct GameXmlContent
{
	struct Master
	{
		CreatureIndex ID;
		ClassType classType;
		eastl::fixed_string<char,64> className;
		eastl::fixed_vector<SkillID,16> skillIDs;
		eastl::fixed_vector<SkinIndex,20> skinIDs;
		eastl::fixed_vector<WeaponIndex,32> weaponIDs;
	};

	struct Spawn
	{
		CreatureIndex docID;
		i32 localID;
		Vec3 pos;
		Vec3 rot;
	};

	struct Map
	{
		eastl::fixed_vector<Spawn,512> spawns;
	};

	// NOTE: We have to store the string hash ourselves, hash_map.find() searches by pointer when we use const char*
	// intead of comparing the hash generated from the string? I must be missing something here. LordSk (29/08/2020)
	eastl::hash<const char*> strHash;

	eastl::fixed_vector<Master,100> masters;
	eastl::fixed_hash_map<size_t,Master*,100> masterClassMap;

	Map mapLobbyNormal;

	bool LoadMasterDefinitions();
	bool LoadMasterSkinsDefinitions();
	bool LoadMasterWeaponDefinitions();
	bool LoadLobbyNormal();
	bool Load();
};

bool GameXmlContentLoad();
const GameXmlContent& GetGameXmlContent();
